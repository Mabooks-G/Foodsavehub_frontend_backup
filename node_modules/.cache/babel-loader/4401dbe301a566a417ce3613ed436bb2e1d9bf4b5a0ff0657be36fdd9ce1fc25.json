{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letha\\\\Downloads\\\\EPE Semester Project\\\\foodsave-hub\\\\client\\\\src\\\\notifications\\\\Notification.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Notifications.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BACKEND = process.env.REACT_APP_API_BACKEND;\nexport default function Notification({\n  currentUser,\n  onRead,\n  refreshFlag\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const unreadCount = notifications.filter(n => !n.notificationRead).length;\n\n  // Fetch notifications from backend\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n        const res = await axios.get(`${API_BACKEND}/api/notifications`, {\n          params: {\n            email: loggedInUser.email\n          }\n        });\n        setNotifications(res.data);\n        setError(\"\");\n      } catch (err) {\n        console.error(\"Fetch notifications error:\", err);\n        setError(\"Failed to load notifications.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNotifications();\n  }, [refreshFlag]);\n  const handleDelete = async id => {\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    try {\n      await axios.put(`${API_BACKEND}/api/notifications/${id}/delete`, {}, {\n        params: {\n          email: loggedInUser.email\n        }\n      });\n\n      // Update local state so the notification disappears\n      setNotifications(prev => prev.filter(item => item.id !== id));\n    } catch (err) {\n      console.error(\"Failed to mark notification as deleted:\", err);\n    }\n  };\n\n  // ✅ Mark a notification as read\n  const handleMarkAsRead = async id => {\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    try {\n      await axios.put(`${API_BACKEND}/api/notifications/${id}/read`, {},\n      // empty body\n      {\n        params: {\n          email: loggedInUser.email\n        }\n      } // this is correct usage\n      );\n\n      // Update local state so the red dot disappears immediately\n      setNotifications(prev => prev.map(item => item.id === id ? {\n        ...item,\n        notificationRead: true\n      } : item));\n\n      // notify App to update unread count\n      if (onRead) onRead(id);\n    } catch (err) {\n      console.error(\"Failed to mark notification as read:\", err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading notifications...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-msg\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notification-title\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No notifications available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : notifications.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        onClick: () => handleMarkAsRead(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-title-text\",\n            children: [item.name, !item.notificationRead && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notification-meta\",\n            children: item.expiryStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `notification-status ${item.status === \"expired\" ? \"status-expired\" : item.status === \"warning\" ? \"status-warning\" : \"status-good\"}`,\n            children: item.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              handleDelete(item.id);\n            },\n            title: \"Delete notification\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Notification, \"ls6/hHWCG78wyIV+SiXEolrcjz4=\");\n_c = Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","API_BACKEND","process","env","REACT_APP_API_BACKEND","Notification","currentUser","onRead","refreshFlag","_s","notifications","setNotifications","loading","setLoading","error","setError","unreadCount","filter","n","notificationRead","length","fetchNotifications","loggedInUser","JSON","parse","localStorage","getItem","res","get","params","email","data","err","console","handleDelete","id","put","prev","item","handleMarkAsRead","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","name","expiryStatus","status","e","stopPropagation","title","_c","$RefreshReg$"],"sources":["C:/Users/letha/Downloads/EPE Semester Project/foodsave-hub/client/src/notifications/Notification.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Notifications.css\";\r\n\r\n\r\nconst API_BACKEND = process.env.REACT_APP_API_BACKEND;\r\n\r\nexport default function Notification({ currentUser, onRead, refreshFlag  }) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const unreadCount = notifications.filter(n => !n.notificationRead).length;\r\n\r\n  \r\n  // Fetch notifications from backend\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n\r\n        const res = await axios.get(\r\n          `${API_BACKEND}/api/notifications`,\r\n          { params: { email: loggedInUser.email } }\r\n        );\r\n        setNotifications(res.data);\r\n        setError(\"\");\r\n      } catch (err) {\r\n        console.error(\"Fetch notifications error:\", err);\r\n        setError(\"Failed to load notifications.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, [refreshFlag]);\r\n\r\nconst handleDelete = async (id) => {\r\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n\r\n  try {\r\n    await axios.put(`${API_BACKEND}/api/notifications/${id}/delete`, {}, {\r\n      params: { email: loggedInUser.email }\r\n    });\r\n\r\n    // Update local state so the notification disappears\r\n    setNotifications((prev) => prev.filter((item) => item.id !== id));\r\n  } catch (err) {\r\n    console.error(\"Failed to mark notification as deleted:\", err);\r\n  }\r\n};\r\n\r\n\r\n\r\n  // ✅ Mark a notification as read\r\n  const handleMarkAsRead = async (id) => {\r\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    \r\n    try {\r\n      await axios.put(\r\n  `${API_BACKEND}/api/notifications/${id}/read`,\r\n  {}, // empty body\r\n  { params: { email: loggedInUser.email } } // this is correct usage\r\n);\r\n\r\n      // Update local state so the red dot disappears immediately\r\n      setNotifications((prev) =>\r\n        prev.map((item) =>\r\n          item.id === id ? { ...item, notificationRead: true } : item\r\n        )\r\n      );\r\n\r\n      // notify App to update unread count\r\n      if (onRead) onRead(id);\r\n\r\n    } catch (err) {\r\n      console.error(\"Failed to mark notification as read:\", err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading notifications...</p>;\r\n  if (error) return <p className=\"error-msg\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <div className=\"notification-card\">\r\n        <h2 className=\"notification-title\">Notifications</h2>\r\n\r\n        {notifications.length === 0 ? (\r\n          <p>No notifications available.</p>\r\n        ) : (\r\n          notifications.map((item) => (\r\n            <div\r\n              key={item.id}\r\n              className=\"notification-item\"\r\n              onClick={() => handleMarkAsRead(item.id)}\r\n            >\r\n              <div className=\"notification-info\">\r\n                <p className=\"notification-title-text\">\r\n                  {item.name}\r\n                  {!item.notificationRead && <span className=\"red-dot\"></span>}\r\n                </p>\r\n                <p className=\"notification-meta\">{item.expiryStatus}</p>\r\n              </div>\r\n              <div className=\"notification-actions\">\r\n                <span\r\n                  className={`notification-status ${\r\n                    item.status === \"expired\"\r\n                      ? \"status-expired\"\r\n                      : item.status === \"warning\"\r\n                      ? \"status-warning\"\r\n                      : \"status-good\"\r\n                  }`}\r\n                >\r\n                  {item.status}\r\n                </span>\r\n                <button\r\n                  className=\"action-btn\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleDelete(item.id);\r\n                  }}\r\n                  title=\"Delete notification\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}