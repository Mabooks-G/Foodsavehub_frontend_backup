{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isack\\\\OneDrive\\\\Desktop\\\\3rd Year Docs\\\\Semester 2\\\\EPE 321 - Software Engineering\\\\foodsavehub\\\\foodsave-hub\\\\client\\\\src\\\\auth\\\\Components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n/* Author: Bethlehem Shimelis\r\n   Event: Sprint 1: Manually Input Food Items with Expiry dates\r\n   LatestUpdate: Added localStorage for logged-in user, improved error handling\r\n   Parameters: \r\n      goToRegister (function) - callback to switch to registration form\r\n      onLogin (function) - callback after successful login\r\n   Description: Handles user login, posts credentials to API backend, stores user info\r\n   Returns: Updates success/error messages, invokes onLogin callback, stores user in localStorage\r\n*/\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BACKEND = process.env.REACT_APP_API_BACKEND;\n\n/* Author: Bethlehem Shimelis\r\n   Event: Login Form Component\r\n   LatestUpdate: Handles form state and submission\r\n   Description: Renders login form, manages input state, sends POST request to backend\r\n   Returns: JSX element for login form\r\n*/\nexport default function LoginForm({\n  goToRegister,\n  onLogin\n}) {\n  _s();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  }); // stores form input values\n  const [error, setError] = useState(\"\"); // stores error messages\n  const [success, setSuccess] = useState(\"\"); // stores success messages\n\n  /* Author: Bethlehem Shimelis\r\n     Event: Handle Input Change\r\n     Description: Updates form state when user types in inputs\r\n     Returns: Updated form state\r\n  */\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n\n  /* Author: Bethlehem Shimelis\r\n     Event: Handle Form Submission\r\n     Description: Sends login request to backend, handles success/error, stores user in localStorage\r\n     Returns: Updates success/error state and calls onLogin callback\r\n  */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(`${API_BACKEND}/api/auth/login`, form);\n      setSuccess(res.data.message || \"Login successful!\");\n      setError(\"\");\n      if (onLogin) onLogin(res.data.user);\n\n      // Save logged-in user locally\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(res.data.user));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Login error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Invalid email or password\");\n      setSuccess(\"\");\n    }\n  };\n\n  // UI Render ---\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FOODSAVE HUB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: form.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: form.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-msg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-msg\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"toggle-link\",\n      onClick: goToRegister,\n      children: \"Don't have an account? Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"xqtLQBDQ7AV+7n1NjP0pymkS9h0=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","API_BACKEND","process","env","REACT_APP_API_BACKEND","LoginForm","goToRegister","onLogin","_s","form","setForm","email","password","error","setError","success","setSuccess","handleChange","e","target","name","value","handleSubmit","preventDefault","res","post","data","message","user","localStorage","setItem","JSON","stringify","err","_err$response","_err$response$data","console","response","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/isack/OneDrive/Desktop/3rd Year Docs/Semester 2/EPE 321 - Software Engineering/foodsavehub/foodsave-hub/client/src/auth/Components/LoginForm.jsx"],"sourcesContent":["/* Author: Bethlehem Shimelis\r\n   Event: Sprint 1: Manually Input Food Items with Expiry dates\r\n   LatestUpdate: Added localStorage for logged-in user, improved error handling\r\n   Parameters: \r\n      goToRegister (function) - callback to switch to registration form\r\n      onLogin (function) - callback after successful login\r\n   Description: Handles user login, posts credentials to API backend, stores user info\r\n   Returns: Updates success/error messages, invokes onLogin callback, stores user in localStorage\r\n*/\r\n\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_BACKEND = process.env.REACT_APP_API_BACKEND;\r\n\r\n/* Author: Bethlehem Shimelis\r\n   Event: Login Form Component\r\n   LatestUpdate: Handles form state and submission\r\n   Description: Renders login form, manages input state, sends POST request to backend\r\n   Returns: JSX element for login form\r\n*/\r\nexport default function LoginForm({ goToRegister, onLogin }) {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" }); // stores form input values\r\n  const [error, setError] = useState(\"\"); // stores error messages\r\n  const [success, setSuccess] = useState(\"\"); // stores success messages\r\n\r\n  /* Author: Bethlehem Shimelis\r\n     Event: Handle Input Change\r\n     Description: Updates form state when user types in inputs\r\n     Returns: Updated form state\r\n  */\r\n  const handleChange = (e) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  /* Author: Bethlehem Shimelis\r\n     Event: Handle Form Submission\r\n     Description: Sends login request to backend, handles success/error, stores user in localStorage\r\n     Returns: Updates success/error state and calls onLogin callback\r\n  */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`${API_BACKEND}/api/auth/login`, form);\r\n\r\n      setSuccess(res.data.message || \"Login successful!\");\r\n      setError(\"\");\r\n\r\n      if (onLogin) onLogin(res.data.user);\r\n\r\n      // Save logged-in user locally\r\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(res.data.user));\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(err.response?.data?.error || \"Invalid email or password\");\r\n      setSuccess(\"\");\r\n    }\r\n  };\r\n\r\n  // UI Render ---\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-card\">\r\n      <h1>FOODSAVE HUB</h1>\r\n\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={form.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={form.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {error && <p className=\"error-msg\">{error}</p>}\r\n      {success && <p className=\"success-msg\">{success}</p>}\r\n\r\n      <button type=\"submit\">Login</button>\r\n      <button type=\"button\" className=\"toggle-link\" onClick={goToRegister}>\r\n        Don't have an account? Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}