{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\School\\\\Year 3\\\\Semester 2\\\\EPE_2025\\\\NewWebsite\\\\foodsave-hub\\\\client\\\\src\\\\donation_coordination\\\\grocerylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport supabase from \"../supabaseClient\";\nimport \"./charity.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroceryList = () => {\n  _s();\n  var _location$state, _location$state2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const foodbank = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.foodbank) || {\n    name: \"[UserName]\"\n  };\n  const userId = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.userId) || null;\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n\n  // Fetch food items\n  useEffect(() => {\n    if (!userId) {\n      setFetchError(\"No stakeholder ID provided.\");\n      return;\n    }\n    const fetchItems = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"fooditemdb\").select(\"fooditemid, name, Measure_per_Unit, Unit, quantity, expirydate\").eq(\"stakeholderid\", userId);\n      if (error) {\n        console.error(error);\n        setFetchError(\"Could not fetch food items.\");\n        setFoodItems([]);\n        return;\n      }\n      const now = new Date();\n      const cutoff = new Date(now.getTime() + 48 * 60 * 60 * 1000);\n      const filteredItems = (data || []).filter(item => {\n        if (!item.expirydate) return true;\n        const expiry = new Date(item.expirydate);\n        return expiry > cutoff;\n      });\n      setFoodItems(filteredItems);\n      setFetchError(null);\n    };\n    fetchItems();\n  }, [userId]);\n  const handleSelect = item => {\n    setSelectedItems(prev => prev.includes(item) ? prev.filter(i => i !== item) : [...prev, item]);\n  };\n\n  // Generate donation ID\n  const generateDonationId = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"donationdb\").select(\"donationid\").order(\"donationid\", {\n        ascending: false\n      }).limit(1);\n      if (error) throw error;\n      if (!data || data.length === 0) return \"d001\";\n      const lastId = data[0].donationid;\n      const lastNum = parseInt(lastId.replace(\"d\", \"\"), 10);\n      return `d${String(lastNum + 1).padStart(3, \"0\")}`;\n    } catch (err) {\n      console.error(\"Error generating donation ID:\", err);\n      return `d${String(Math.floor(1 + Math.random() * 999)).padStart(3, \"0\")}`;\n    }\n  };\n\n  // Send donation\n  const handleSendDonation = async () => {\n    if (selectedItems.length === 0) {\n      alert(\"Please select at least one item to donate.\");\n      return;\n    }\n    try {\n      const itemsToSave = selectedItems.map(label => {\n        const [name] = label.split(\" (\");\n        return {\n          name: name.trim()\n        };\n      });\n      const newDonationId = await generateDonationId();\n      const {\n        data,\n        error\n      } = await supabase.from(\"donationdb\").insert([{\n        donationid: newDonationId,\n        donationstatus: \"pending\",\n        charityid: foodbank.stakeholderid,\n        stakeholderid: userId,\n        donation_items: itemsToSave\n      }]).select();\n      if (error) {\n        console.error(\"Error inserting donation:\", error);\n        alert(\"Could not send donation. Please try again.\");\n        return;\n      }\n      console.log(\"Donation saved:\", data[0]);\n      alert(`Donation sent to ${foodbank.name}`);\n      navigate(\"/donor\");\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n      alert(\"Something went wrong.\");\n    }\n  };\n\n  // ✅ Subscribe to donation status updates\n  useEffect(() => {\n    if (!userId) return;\n    console.log(\"Subscribing for donor updates with ID:\", userId);\n    const channel = supabase.channel(`donation-updates-${userId}`).on(\"postgres_changes\", {\n      event: \"UPDATE\",\n      schema: \"public\",\n      table: \"donationdb\",\n      filter: `stakeholderid=eq.${userId}`\n    }, payload => {\n      const newStatus = payload.new.donationstatus;\n      const donationId = payload.new.donationid;\n      console.log(\"Realtime payload:\", payload);\n      if (newStatus === \"approved\") {\n        alert(`✅ Donation ${donationId} has been approved!`);\n      } else if (newStatus === \"unapproved\") {\n        alert(`❌ Donation ${donationId} has been declined.`);\n      }\n    }).subscribe(status => {\n      console.log(\"Subscription status:\", status);\n    });\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grocery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(\"/donor\"),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Donate to \", foodbank.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select items to donate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-list green-bg\",\n      children: foodItems.map(item => {\n        const itemLabel = `${item.name} (${item.Measure_per_Unit} ${item.Unit}, quantity: ${item.quantity})`;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"food-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedItems.includes(itemLabel),\n            onChange: () => handleSelect(itemLabel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), itemLabel, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.8em\",\n              color: \"#666\"\n            },\n            children: [\"(expires \", new Date(item.expirydate).toLocaleDateString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, item.fooditemid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-send\",\n      onClick: handleSendDonation,\n      children: \"Send Donation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(GroceryList, \"qaGSsTINQLQzDOk4Moe/+Gg2lkM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = GroceryList;\nexport default GroceryList;\nvar _c;\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","supabase","jsxDEV","_jsxDEV","GroceryList","_s","_location$state","_location$state2","navigate","location","foodbank","state","name","userId","selectedItems","setSelectedItems","foodItems","setFoodItems","fetchError","setFetchError","fetchItems","data","error","from","select","eq","console","now","Date","cutoff","getTime","filteredItems","filter","item","expirydate","expiry","handleSelect","prev","includes","i","generateDonationId","order","ascending","limit","length","lastId","donationid","lastNum","parseInt","replace","String","padStart","err","Math","floor","random","handleSendDonation","alert","itemsToSave","map","label","split","trim","newDonationId","insert","donationstatus","charityid","stakeholderid","donation_items","log","channel","on","event","schema","table","payload","newStatus","new","donationId","subscribe","status","removeChannel","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","itemLabel","Measure_per_Unit","Unit","quantity","type","checked","onChange","style","fontSize","color","toLocaleDateString","fooditemid","_c","$RefreshReg$"],"sources":["C:/Users/chant/Desktop/School/Year 3/Semester 2/EPE_2025/NewWebsite/foodsave-hub/client/src/donation_coordination/grocerylist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport supabase from \"../supabaseClient\";\r\nimport \"./charity.css\";\r\n\r\nconst GroceryList = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const foodbank = location.state?.foodbank || { name: \"[UserName]\" };\r\n  const userId = location.state?.userId || null;\r\n\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [foodItems, setFoodItems] = useState([]);\r\n  const [fetchError, setFetchError] = useState(null);\r\n\r\n  // Fetch food items\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      setFetchError(\"No stakeholder ID provided.\");\r\n      return;\r\n    }\r\n\r\n    const fetchItems = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"fooditemdb\")\r\n        .select(\"fooditemid, name, Measure_per_Unit, Unit, quantity, expirydate\")\r\n        .eq(\"stakeholderid\", userId);\r\n\r\n      if (error) {\r\n        console.error(error);\r\n        setFetchError(\"Could not fetch food items.\");\r\n        setFoodItems([]);\r\n        return;\r\n      }\r\n\r\n      const now = new Date();\r\n      const cutoff = new Date(now.getTime() + 48 * 60 * 60 * 1000);\r\n\r\n      const filteredItems = (data || []).filter((item) => {\r\n        if (!item.expirydate) return true;\r\n        const expiry = new Date(item.expirydate);\r\n        return expiry > cutoff;\r\n      });\r\n\r\n      setFoodItems(filteredItems);\r\n      setFetchError(null);\r\n    };\r\n\r\n    fetchItems();\r\n  }, [userId]);\r\n\r\n  const handleSelect = (item) => {\r\n    setSelectedItems((prev) =>\r\n      prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\r\n    );\r\n  };\r\n\r\n  // Generate donation ID\r\n  const generateDonationId = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"donationdb\")\r\n        .select(\"donationid\")\r\n        .order(\"donationid\", { ascending: false })\r\n        .limit(1);\r\n\r\n      if (error) throw error;\r\n\r\n      if (!data || data.length === 0) return \"d001\";\r\n\r\n      const lastId = data[0].donationid;\r\n      const lastNum = parseInt(lastId.replace(\"d\", \"\"), 10);\r\n      return `d${String(lastNum + 1).padStart(3, \"0\")}`;\r\n    } catch (err) {\r\n      console.error(\"Error generating donation ID:\", err);\r\n      return `d${String(Math.floor(1 + Math.random() * 999)).padStart(3, \"0\")}`;\r\n    }\r\n  };\r\n\r\n  // Send donation\r\n  const handleSendDonation = async () => {\r\n    if (selectedItems.length === 0) {\r\n      alert(\"Please select at least one item to donate.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const itemsToSave = selectedItems.map((label) => {\r\n        const [name] = label.split(\" (\");\r\n        return { name: name.trim() };\r\n      });\r\n\r\n      const newDonationId = await generateDonationId();\r\n\r\n      const { data, error } = await supabase.from(\"donationdb\").insert([\r\n        {\r\n          donationid: newDonationId,\r\n          donationstatus: \"pending\",\r\n          charityid: foodbank.stakeholderid,\r\n          stakeholderid: userId,\r\n          donation_items: itemsToSave,\r\n        },\r\n      ]).select();\r\n\r\n      if (error) {\r\n        console.error(\"Error inserting donation:\", error);\r\n        alert(\"Could not send donation. Please try again.\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"Donation saved:\", data[0]);\r\n      alert(`Donation sent to ${foodbank.name}`);\r\n      navigate(\"/donor\");\r\n    } catch (err) {\r\n      console.error(\"Unexpected error:\", err);\r\n      alert(\"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  // ✅ Subscribe to donation status updates\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    console.log(\"Subscribing for donor updates with ID:\", userId);\r\n\r\n    const channel = supabase\r\n      .channel(`donation-updates-${userId}`)\r\n      .on(\r\n        \"postgres_changes\",\r\n        {\r\n          event: \"UPDATE\",\r\n          schema: \"public\",\r\n          table: \"donationdb\",\r\n          filter: `stakeholderid=eq.${userId}`,\r\n        },\r\n        (payload) => {\r\n          const newStatus = payload.new.donationstatus;\r\n          const donationId = payload.new.donationid;\r\n          console.log(\"Realtime payload:\", payload);\r\n\r\n          if (newStatus === \"approved\") {\r\n            alert(`✅ Donation ${donationId} has been approved!`);\r\n          } else if (newStatus === \"unapproved\") {\r\n            alert(`❌ Donation ${donationId} has been declined.`);\r\n          }\r\n        }\r\n      )\r\n      .subscribe((status) => {\r\n        console.log(\"Subscription status:\", status);\r\n      });\r\n\r\n    return () => {\r\n      supabase.removeChannel(channel);\r\n    };\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"grocery-container\">\r\n      <button className=\"back-btn\" onClick={() => navigate(\"/donor\")}>\r\n        ← Back\r\n      </button>\r\n\r\n      <h3>Donate to {foodbank.name}</h3>\r\n      <p>Select items to donate</p>\r\n\r\n      {fetchError && <p>{fetchError}</p>}\r\n\r\n      <div className=\"food-list green-bg\">\r\n        {foodItems.map((item) => {\r\n          const itemLabel = `${item.name} (${item.Measure_per_Unit} ${item.Unit}, quantity: ${item.quantity})`;\r\n          return (\r\n            <label key={item.fooditemid} className=\"food-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedItems.includes(itemLabel)}\r\n                onChange={() => handleSelect(itemLabel)}\r\n              />\r\n              {itemLabel}{\" \"}\r\n              <span style={{ fontSize: \"0.8em\", color: \"#666\" }}>\r\n                (expires {new Date(item.expirydate).toLocaleDateString()})\r\n              </span>\r\n            </label>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <button className=\"btn-send\" onClick={handleSendDonation}>\r\n        Send Donation\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroceryList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}