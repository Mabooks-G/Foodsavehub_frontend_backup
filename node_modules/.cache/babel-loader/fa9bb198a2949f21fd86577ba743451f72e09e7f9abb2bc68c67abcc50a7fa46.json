{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letha\\\\Downloads\\\\EPE Sem Project - the Reclone\\\\foodsave-hub\\\\client\\\\src\\\\communication\\\\Communication.js\",\n  _s = $RefreshSig$();\n// src/communication/Communication.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './communication.css';\nimport ChatContext, { ChatProvider } from './Components/ChatContext';\n\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Integrated chat access gating\r\n   Description: Fetches user chats and controls access to chat features\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommunicationContent() {\n  _s();\n  const {\n    currentUserEmail,\n    currentUserId\n  } = useContext(ChatContext);\n  const [canAccessChats, setCanAccessChats] = useState(false);\n\n  /* Author: Lethabo Mazui\r\n     Event: Sprint 1\r\n     LatestUpdate: Added chat initialization with Supabase\r\n     Description: On mount, fetches user chats and checks if user has approved donations\r\n  */\n  const API_BACKEND = process.env.REACT_APP_API_BACKEND;\n  useEffect(() => {\n    if (!currentUserEmail) {\n      console.warn('No currentUserEmail yet in ChatContext');\n      return;\n    }\n    async function initUserChats() {\n      try {\n        console.log('Fetching user chats for', currentUserEmail);\n        const res = await fetch(`${API_BACKEND}/supabase/getUserChats`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: currentUserEmail,\n            since: '1970-01-01T00:00:00Z'\n          })\n        });\n        if (!res.ok) {\n          const text = await res.text();\n          console.error('Fetch failed with status', res.status, text);\n          return;\n        }\n        const chats = await res.json();\n        console.log('User chats fetched:', chats);\n        const hasApprovedDonation = Array.isArray(chats) && chats.length > 0;\n        setCanAccessChats(hasApprovedDonation);\n      } catch (err) {\n        console.error('Error initializing user chats:', err);\n      }\n    }\n    initUserChats();\n  }, [currentUserEmail]);\n\n  /* Author: Lethabo Mazui\r\n     Event: Sprint 1\r\n     LatestUpdate: Added ChatContext logging\r\n     Description: Logs when the currentUserId is available in ChatContext\r\n  */\n  useEffect(() => {\n    if (currentUserId) {\n      console.log('currentUserId is now set in ChatContext:', currentUserId);\n    }\n  }, [currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"communication-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Communications Hub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connect with other FoodSave users through our secure messaging system.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communication-options\",\n      children: canAccessChats ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/chatlist\",\n        className: \"chat-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"View and manage your conversations with other users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-card disabled\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No approved donations yet. You need at least one approved donation to access chats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Wrapped CommunicationContent in ChatProvider\r\n   Description: Provides ChatContext to the communication hub\r\n*/\n_s(CommunicationContent, \"OsxAlIw2Gm9vVZIi7b1XAEE8/UA=\");\n_c = CommunicationContent;\nexport default function Communication({\n  currentUser\n}) {\n  return /*#__PURE__*/_jsxDEV(ChatProvider, {\n    currentUserEmail: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n    children: /*#__PURE__*/_jsxDEV(CommunicationContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Communication;\nvar _c, _c2;\n$RefreshReg$(_c, \"CommunicationContent\");\n$RefreshReg$(_c2, \"Communication\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Link","ChatContext","ChatProvider","jsxDEV","_jsxDEV","CommunicationContent","_s","currentUserEmail","currentUserId","canAccessChats","setCanAccessChats","API_BACKEND","process","env","REACT_APP_API_BACKEND","console","warn","initUserChats","log","res","fetch","method","headers","body","JSON","stringify","email","since","ok","text","error","status","chats","json","hasApprovedDonation","Array","isArray","length","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","Communication","currentUser","_c2","$RefreshReg$"],"sources":["C:/Users/letha/Downloads/EPE Sem Project - the Reclone/foodsave-hub/client/src/communication/Communication.js"],"sourcesContent":["// src/communication/Communication.js\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './communication.css';\r\nimport ChatContext, { ChatProvider } from './Components/ChatContext';\r\n\r\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Integrated chat access gating\r\n   Description: Fetches user chats and controls access to chat features\r\n*/\r\nfunction CommunicationContent() {\r\n  const { currentUserEmail, currentUserId } = useContext(ChatContext);\r\n  const [canAccessChats, setCanAccessChats] = useState(false);\r\n\r\n  /* Author: Lethabo Mazui\r\n     Event: Sprint 1\r\n     LatestUpdate: Added chat initialization with Supabase\r\n     Description: On mount, fetches user chats and checks if user has approved donations\r\n  */\r\n  const API_BACKEND = process.env.REACT_APP_API_BACKEND;\r\n  useEffect(() => {\r\n    if (!currentUserEmail) {\r\n      console.warn('No currentUserEmail yet in ChatContext');\r\n      return;\r\n    }\r\n\r\n    async function initUserChats() {\r\n      try {\r\n        console.log('Fetching user chats for', currentUserEmail);\r\n\r\n        const res = await fetch(`${API_BACKEND}/supabase/getUserChats`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ email: currentUserEmail, since: '1970-01-01T00:00:00Z' }),\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const text = await res.text();\r\n          console.error('Fetch failed with status', res.status, text);\r\n          return;\r\n        }\r\n\r\n        const chats = await res.json();\r\n        console.log('User chats fetched:', chats);\r\n\r\n        const hasApprovedDonation = Array.isArray(chats) && chats.length > 0;\r\n        setCanAccessChats(hasApprovedDonation);\r\n      } catch (err) {\r\n        console.error('Error initializing user chats:', err);\r\n      }\r\n    }\r\n\r\n    initUserChats();\r\n  }, [currentUserEmail]);\r\n\r\n  /* Author: Lethabo Mazui\r\n     Event: Sprint 1\r\n     LatestUpdate: Added ChatContext logging\r\n     Description: Logs when the currentUserId is available in ChatContext\r\n  */\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      console.log('currentUserId is now set in ChatContext:', currentUserId);\r\n    }\r\n  }, [currentUserId]);\r\n\r\n  return (\r\n    <div className=\"communication-container\">\r\n      <h1>Communications Hub</h1>\r\n      <p>Connect with other FoodSave users through our secure messaging system.</p>\r\n\r\n      <div className=\"communication-options\">\r\n        {canAccessChats ? (\r\n          <Link to=\"/chatlist\" className=\"chat-link\">\r\n            <div className=\"option-card\">\r\n              <h2>My Chats</h2>\r\n              <p>View and manage your conversations with other users</p>\r\n            </div>\r\n          </Link>\r\n        ) : (\r\n          <div className=\"option-card disabled\">\r\n            <h2>My Chats</h2>\r\n            <p>No approved donations yet. You need at least one approved donation to access chats.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Wrapped CommunicationContent in ChatProvider\r\n   Description: Provides ChatContext to the communication hub\r\n*/\r\nexport default function Communication({ currentUser }) {\r\n  return (\r\n    <ChatProvider currentUserEmail={currentUser?.email}>\r\n      <CommunicationContent />\r\n    </ChatProvider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}