{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letha\\\\Downloads\\\\EPE Sem Project - the Reclone\\\\foodsave-hub\\\\client\\\\src\\\\communication\\\\Components\\\\ChatThread.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport ChatContext from \"./ChatContext\";\nimport \"./ChatThread.css\";\n\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Stable +2h offset timestamps, per-message display, filter empty messages\r\n   Description: Handles display and interaction for a single chat conversation\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatThread() {\n  _s();\n  var _location$state, _location$state2;\n  const {\n    donationId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    channels,\n    markChatRead,\n    markDelivered,\n    currentUserId,\n    addMessage\n  } = useContext(ChatContext);\n  const [messages, setMessages] = useState([]);\n  const [typing, setTyping] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [avatarEmoji, setAvatarEmoji] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.avatarEmoji) || \"🍏\");\n  const [otherParticipant, setOtherParticipant] = useState(((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.participantName) || \"User\");\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  const messagesEndRef = useRef(null);\n  const messagesWrapperRef = useRef(null);\n  const hasScrolledToBottomRef = useRef(false);\n  const currentYear = new Date().getFullYear();\n\n  // ----------------------------\n  // Safe timestamp parser for individual messages\n  // ----------------------------\n  const parseMessageTimestamp = ts => {\n    if (!ts) return new Date();\n    let date;\n    try {\n      date = new Date(ts.includes(\"T\") ? ts : ts.replace(\" \", \"T\") + \"Z\");\n      if (isNaN(date.getTime())) throw new Error(\"Invalid date\");\n    } catch {\n      date = new Date();\n    }\n    return date;\n  };\n\n  // ----------------------------\n  // Apply 2-hour offset\n  // ----------------------------\n  const applyOffset = (date, hours = 2) => new Date(date.getTime() + hours * 60 * 60 * 1000);\n\n  // ----------------------------\n  // Load messages, mark read & delivered, filter empty messages\n  // ----------------------------\n  useEffect(() => {\n    if (!donationId || !channels) return;\n    const donationMessages = channels.filter(m => m.donationid === donationId).filter(m => m.chathistory && m.chathistory.trim() || m.decryptedText && m.decryptedText.trim()).map(m => {\n      const msgDateUTC = parseMessageTimestamp(m.message_timestamp);\n      const msgDate = applyOffset(msgDateUTC, 2); // +2 hours\n      const showYear = msgDate.getFullYear() !== currentYear;\n      const dateFormatter = new Intl.DateTimeFormat(\"en-ZA\", {\n        day: \"numeric\",\n        month: \"long\",\n        year: showYear ? \"numeric\" : undefined\n      });\n      return {\n        ...m,\n        displayTimestamp: msgDate.getTime(),\n        localTime: msgDate.toLocaleTimeString(\"en-ZA\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }),\n        localDate: msgDate.toLocaleDateString(\"en-ZA\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }),\n        formattedDate: dateFormatter.format(msgDate),\n        decryptedText: null\n      };\n    });\n    setMessages(donationMessages);\n    const otherMsg = donationMessages.find(m => m.senderid !== currentUserId);\n    if (otherMsg) {\n      setOtherParticipant(otherMsg.senderName || otherMsg.charityName || \"User\");\n      setAvatarEmoji(otherMsg.icon || \"🍏\");\n    }\n    if (donationMessages.length > 0) {\n      markChatRead(donationId);\n      const hasUndelivered = donationMessages.some(m => !m.delivered && m.senderid !== currentUserId);\n      if (hasUndelivered) markDelivered(donationId);\n    }\n  }, [donationId, channels, markChatRead, markDelivered, currentUserId]);\n\n  // ----------------------------\n  // Scroll to bottom once\n  // ----------------------------\n  useEffect(() => {\n    if (!hasScrolledToBottomRef.current && messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      hasScrolledToBottomRef.current = true;\n    }\n  }, [messages]);\n\n  // ----------------------------\n  // Track manual scrolling\n  // ----------------------------\n  useEffect(() => {\n    const wrapper = messagesWrapperRef.current;\n    if (!wrapper) return;\n    const handleScroll = () => {\n      const atBottom = wrapper.scrollHeight - wrapper.scrollTop === wrapper.clientHeight;\n      setShowScrollButton(!atBottom);\n    };\n    wrapper.addEventListener(\"scroll\", handleScroll);\n    return () => wrapper.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const handleScrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n\n  // ----------------------------\n  // Send message\n  // ----------------------------\n  const handleSend = async () => {\n    if (!inputValue.trim()) return;\n    const timestampUTC = new Date().toISOString();\n    addMessage(currentUserId, inputValue.trim(), donationId, timestampUTC);\n    setInputValue(\"\");\n  };\n\n  // ----------------------------\n  // Render messages\n  // ----------------------------\n  const renderMessages = () => {\n    let lastDate = \"\";\n    return messages.map(msg => {\n      const showDate = lastDate !== msg.localDate;\n      lastDate = msg.localDate;\n      const isSent = msg.senderid === currentUserId;\n      if (!(msg.decryptedText && msg.decryptedText.trim()) && !(msg.chathistory && msg.chathistory.trim())) return null;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-bubble\",\n          children: msg.formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-row ${isSent ? \"sent\" : \"received\"}`,\n          children: [!isSent && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: msg.avatarEmoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${msg.readreceipts && !isSent ? \"read-green\" : \"\"}`,\n            children: [msg.decryptedText || msg.chathistory, isSent && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `read-receipt ${msg.readreceipts ? \"read\" : msg.delivered ? \"delivered\" : \"\"}`,\n              children: msg.delivered ? \"✓✓\" : \"✓\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: msg.localTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, msg.chatid + (msg.message_timestamp || new Date().toISOString()), true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(\"/chatlist\"),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-avatar\",\n        children: avatarEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-name\",\n          children: otherParticipant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-subtitle\",\n          style: {\n            fontSize: \"0.8rem\",\n            color: \"grey\"\n          },\n          children: [\"\\u2022 Donation #\", donationId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-wrapper\",\n      ref: messagesWrapperRef,\n      style: {\n        overflowY: \"auto\",\n        flex: 1,\n        padding: \"1rem\"\n      },\n      children: [renderMessages(), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-row received\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble typing\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), showScrollButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-to-bottom-btn\",\n      onClick: handleScrollToBottom,\n      children: \"\\u2193 Scroll to Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type a message...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && !e.shiftKey && handleSend(),\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatThread, \"/+wZrkgPjMQh8zb/beTkFZ6+coc=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = ChatThread;\nvar _c;\n$RefreshReg$(_c, \"ChatThread\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","useParams","useNavigate","useLocation","ChatContext","jsxDEV","_jsxDEV","ChatThread","_s","_location$state","_location$state2","donationId","navigate","location","channels","markChatRead","markDelivered","currentUserId","addMessage","messages","setMessages","typing","setTyping","inputValue","setInputValue","avatarEmoji","setAvatarEmoji","state","otherParticipant","setOtherParticipant","participantName","showScrollButton","setShowScrollButton","messagesEndRef","messagesWrapperRef","hasScrolledToBottomRef","currentYear","Date","getFullYear","parseMessageTimestamp","ts","date","includes","replace","isNaN","getTime","Error","applyOffset","hours","donationMessages","filter","m","donationid","chathistory","trim","decryptedText","map","msgDateUTC","message_timestamp","msgDate","showYear","dateFormatter","Intl","DateTimeFormat","day","month","year","undefined","displayTimestamp","localTime","toLocaleTimeString","hour","minute","localDate","toLocaleDateString","formattedDate","format","otherMsg","find","senderid","senderName","charityName","icon","length","hasUndelivered","some","delivered","current","scrollIntoView","behavior","wrapper","handleScroll","atBottom","scrollHeight","scrollTop","clientHeight","addEventListener","removeEventListener","handleScrollToBottom","handleSend","timestampUTC","toISOString","renderMessages","lastDate","msg","showDate","isSent","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","readreceipts","chatid","onClick","style","fontSize","color","ref","overflowY","flex","padding","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","rows","_c","$RefreshReg$"],"sources":["C:/Users/letha/Downloads/EPE Sem Project - the Reclone/foodsave-hub/client/src/communication/Components/ChatThread.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\"; \r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport ChatContext from \"./ChatContext\";\r\nimport \"./ChatThread.css\";\r\n\r\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Stable +2h offset timestamps, per-message display, filter empty messages\r\n   Description: Handles display and interaction for a single chat conversation\r\n*/\r\nexport default function ChatThread() {\r\n  const { donationId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { channels, markChatRead, markDelivered, currentUserId, addMessage } = useContext(ChatContext);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [typing, setTyping] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [avatarEmoji, setAvatarEmoji] = useState(location.state?.avatarEmoji || \"🍏\");\r\n  const [otherParticipant, setOtherParticipant] = useState(location.state?.participantName || \"User\");\r\n  const [showScrollButton, setShowScrollButton] = useState(false);\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const messagesWrapperRef = useRef(null);\r\n  const hasScrolledToBottomRef = useRef(false);\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  // ----------------------------\r\n  // Safe timestamp parser for individual messages\r\n  // ----------------------------\r\n  const parseMessageTimestamp = (ts) => {\r\n    if (!ts) return new Date();\r\n    let date;\r\n    try {\r\n      date = new Date(ts.includes(\"T\") ? ts : ts.replace(\" \", \"T\") + \"Z\");\r\n      if (isNaN(date.getTime())) throw new Error(\"Invalid date\");\r\n    } catch {\r\n      date = new Date();\r\n    }\r\n    return date;\r\n  };\r\n\r\n  // ----------------------------\r\n  // Apply 2-hour offset\r\n  // ----------------------------\r\n  const applyOffset = (date, hours = 2) => new Date(date.getTime() + hours * 60 * 60 * 1000);\r\n\r\n  // ----------------------------\r\n  // Load messages, mark read & delivered, filter empty messages\r\n  // ----------------------------\r\n  useEffect(() => {\r\n    if (!donationId || !channels) return;\r\n\r\n    const donationMessages = channels\r\n      .filter(m => m.donationid === donationId)\r\n      .filter(m => (m.chathistory && m.chathistory.trim()) || (m.decryptedText && m.decryptedText.trim()))\r\n      .map(m => {\r\n        const msgDateUTC = parseMessageTimestamp(m.message_timestamp);\r\n        const msgDate = applyOffset(msgDateUTC, 2); // +2 hours\r\n        const showYear = msgDate.getFullYear() !== currentYear;\r\n        const dateFormatter = new Intl.DateTimeFormat(\"en-ZA\", {\r\n          day: \"numeric\",\r\n          month: \"long\",\r\n          year: showYear ? \"numeric\" : undefined,\r\n        });\r\n\r\n        return {\r\n          ...m,\r\n          displayTimestamp: msgDate.getTime(),\r\n          localTime: msgDate.toLocaleTimeString(\"en-ZA\", { hour: \"2-digit\", minute: \"2-digit\" }),\r\n          localDate: msgDate.toLocaleDateString(\"en-ZA\", { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }),\r\n          formattedDate: dateFormatter.format(msgDate),\r\n          decryptedText: null\r\n        };\r\n      });\r\n\r\n    setMessages(donationMessages);\r\n\r\n    const otherMsg = donationMessages.find(m => m.senderid !== currentUserId);\r\n    if (otherMsg) {\r\n      setOtherParticipant(otherMsg.senderName || otherMsg.charityName || \"User\");\r\n      setAvatarEmoji(otherMsg.icon || \"🍏\");\r\n    }\r\n\r\n    if (donationMessages.length > 0) {\r\n      markChatRead(donationId);\r\n      const hasUndelivered = donationMessages.some(m => !m.delivered && m.senderid !== currentUserId);\r\n      if (hasUndelivered) markDelivered(donationId);\r\n    }\r\n  }, [donationId, channels, markChatRead, markDelivered, currentUserId]);\r\n\r\n  // ----------------------------\r\n  // Scroll to bottom once\r\n  // ----------------------------\r\n  useEffect(() => {\r\n    if (!hasScrolledToBottomRef.current && messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      hasScrolledToBottomRef.current = true;\r\n    }\r\n  }, [messages]);\r\n\r\n  // ----------------------------\r\n  // Track manual scrolling\r\n  // ----------------------------\r\n  useEffect(() => {\r\n    const wrapper = messagesWrapperRef.current;\r\n    if (!wrapper) return;\r\n\r\n    const handleScroll = () => {\r\n      const atBottom = wrapper.scrollHeight - wrapper.scrollTop === wrapper.clientHeight;\r\n      setShowScrollButton(!atBottom);\r\n    };\r\n\r\n    wrapper.addEventListener(\"scroll\", handleScroll);\r\n    return () => wrapper.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const handleScrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  // ----------------------------\r\n  // Send message\r\n  // ----------------------------\r\n  const handleSend = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const timestampUTC = new Date().toISOString();\r\n    addMessage(currentUserId, inputValue.trim(), donationId, timestampUTC);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  // ----------------------------\r\n  // Render messages\r\n  // ----------------------------\r\n  const renderMessages = () => {\r\n    let lastDate = \"\";\r\n    return messages.map(msg => {\r\n      const showDate = lastDate !== msg.localDate;\r\n      lastDate = msg.localDate;\r\n      const isSent = msg.senderid === currentUserId;\r\n\r\n      if (!(msg.decryptedText && msg.decryptedText.trim()) && !(msg.chathistory && msg.chathistory.trim())) return null;\r\n\r\n      return (\r\n        <React.Fragment key={msg.chatid + (msg.message_timestamp || new Date().toISOString())}>\r\n          {showDate && <div className=\"date-bubble\">{msg.formattedDate}</div>}\r\n          <div className={`message-row ${isSent ? \"sent\" : \"received\"}`}>\r\n            {!isSent && <div className=\"avatar\">{msg.avatarEmoji}</div>}\r\n            <div className={`message-bubble ${msg.readreceipts && !isSent ? \"read-green\" : \"\"}`}>\r\n              {msg.decryptedText || msg.chathistory}\r\n              {isSent && (\r\n                <span className={`read-receipt ${msg.readreceipts ? \"read\" : msg.delivered ? \"delivered\" : \"\"}`}>\r\n                  {msg.delivered ? \"✓✓\" : \"✓\"}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"message-time\">{msg.localTime}</div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"chat-header\">\r\n        <button className=\"back-button\" onClick={() => navigate(\"/chatlist\")}>← Back</button>\r\n        <div className=\"chat-header-avatar\">{avatarEmoji}</div>\r\n        <div className=\"user-info\">\r\n          <div className=\"user-name\">{otherParticipant}</div>\r\n          <div className=\"user-subtitle\" style={{ fontSize: \"0.8rem\", color: \"grey\" }}>\r\n            • Donation #{donationId}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-wrapper\" ref={messagesWrapperRef} style={{ overflowY: \"auto\", flex: 1, padding: \"1rem\" }}>\r\n        {renderMessages()}\r\n        {typing && (\r\n          <div className=\"message-row received\">\r\n            <div className=\"message-bubble typing\"><span></span><span></span><span></span></div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {showScrollButton && (\r\n        <button className=\"scroll-to-bottom-btn\" onClick={handleScrollToBottom}>\r\n          ↓ Scroll to Bottom\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"message-input-container\">\r\n        <textarea\r\n          placeholder=\"Type a message...\"\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onKeyDown={e => e.key === \"Enter\" && !e.shiftKey && handleSend()}\r\n          rows={1}\r\n        />\r\n        <button className=\"send-button\" onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}