{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isack\\\\OneDrive\\\\Desktop\\\\3rd Year Docs\\\\Semester 2\\\\EPE 321 - Software Engineering\\\\verlastverison\\\\foodsave-hub\\\\client\\\\src\\\\communication\\\\Components\\\\ChatThread.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport ChatContext from \"./ChatContext\";\nimport \"./ChatThread.css\";\n\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Auto scroll + manual scroll button with unread messages count\r\n   Description: Handles display and interaction for a single chat conversation\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatThread() {\n  _s();\n  var _location$state, _location$state2;\n  const {\n    donationId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    channels,\n    markChatRead,\n    markDelivered,\n    currentUserId,\n    addMessage\n  } = useContext(ChatContext);\n  const [messages, setMessages] = useState([]);\n  const [typing, setTyping] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [avatarEmoji, setAvatarEmoji] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.avatarEmoji) || \"🍏\");\n  const [otherParticipant, setOtherParticipant] = useState(((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.participantName) || \"User\");\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  const [unreadMessagesCount, setUnreadMessagesCount] = useState(0);\n  const messagesEndRef = useRef(null);\n  const messagesWrapperRef = useRef(null);\n  const currentYear = new Date().getFullYear();\n  const parseMessageTimestamp = ts => {\n    if (!ts) return new Date();\n    let date;\n    try {\n      date = new Date(ts.includes(\"T\") ? ts : ts.replace(\" \", \"T\") + \"Z\");\n      if (isNaN(date.getTime())) throw new Error(\"Invalid date\");\n    } catch {\n      date = new Date();\n    }\n    return date;\n  };\n  const applyOffset = (date, hours = 2) => new Date(date.getTime() + hours * 60 * 60 * 1000);\n\n  // Load messages and mark read/delivered\n  useEffect(() => {\n    if (!donationId || !channels) return;\n    const donationMessages = channels.filter(m => m.donationid === donationId).filter(m => m.chathistory && m.chathistory.trim() || m.decryptedText && m.decryptedText.trim()).map(m => {\n      const msgDateUTC = parseMessageTimestamp(m.message_timestamp);\n      const msgDate = applyOffset(msgDateUTC, 2);\n      const showYear = msgDate.getFullYear() !== currentYear;\n      const dateFormatter = new Intl.DateTimeFormat(\"en-ZA\", {\n        day: \"numeric\",\n        month: \"long\",\n        year: showYear ? \"numeric\" : undefined\n      });\n      return {\n        ...m,\n        displayTimestamp: msgDate.getTime(),\n        localTime: msgDate.toLocaleTimeString(\"en-ZA\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }),\n        localDate: msgDate.toLocaleDateString(\"en-ZA\", {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\"\n        }),\n        formattedDate: dateFormatter.format(msgDate),\n        decryptedText: null\n      };\n    });\n    setMessages(donationMessages);\n    const otherMsg = donationMessages.find(m => m.senderid !== currentUserId);\n    if (otherMsg) {\n      setOtherParticipant(otherMsg.senderName || otherMsg.charityName || \"User\");\n      setAvatarEmoji(otherMsg.icon || \"🍏\");\n    }\n    if (donationMessages.length > 0) {\n      markChatRead(donationId);\n      const hasUndelivered = donationMessages.some(m => !m.delivered && m.senderid !== currentUserId);\n      if (hasUndelivered) markDelivered(donationId);\n    }\n\n    // Count unread messages for scroll button\n    const unread = donationMessages.filter(m => !m.readreceipts && m.senderid !== currentUserId).length;\n    setUnreadMessagesCount(unread);\n    setShowScrollButton(unread > 0);\n\n    // Automatically scroll to bottom on chat open\n    setTimeout(() => {\n      var _messagesEndRef$curre;\n      return (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 50);\n  }, [donationId, channels, markChatRead, markDelivered, currentUserId]);\n\n  // Scroll to bottom when sending a message\n  useEffect(() => {\n    const wrapper = messagesWrapperRef.current;\n    if (!wrapper) return;\n    const handleScroll = () => {\n      const atBottom = wrapper.scrollHeight - wrapper.scrollTop === wrapper.clientHeight;\n      if (atBottom) setShowScrollButton(false);\n    };\n    wrapper.addEventListener(\"scroll\", handleScroll);\n    return () => wrapper.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const handleScrollToBottom = () => {\n    var _messagesEndRef$curre2;\n    (_messagesEndRef$curre2 = messagesEndRef.current) === null || _messagesEndRef$curre2 === void 0 ? void 0 : _messagesEndRef$curre2.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setShowScrollButton(false);\n    setUnreadMessagesCount(0);\n  };\n  const handleSend = async () => {\n    if (!inputValue.trim()) return;\n    const timestampUTC = new Date().toISOString();\n    addMessage(currentUserId, inputValue.trim(), donationId, timestampUTC);\n    setInputValue(\"\");\n    // Scroll immediately when sending\n    setTimeout(() => {\n      var _messagesEndRef$curre3;\n      return (_messagesEndRef$curre3 = messagesEndRef.current) === null || _messagesEndRef$curre3 === void 0 ? void 0 : _messagesEndRef$curre3.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }, 50);\n  };\n  const renderMessages = () => {\n    let lastDate = \"\";\n    return messages.map(msg => {\n      const showDate = lastDate !== msg.localDate;\n      lastDate = msg.localDate;\n      const isSent = msg.senderid === currentUserId;\n      if (!(msg.decryptedText && msg.decryptedText.trim()) && !(msg.chathistory && msg.chathistory.trim())) return null;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-bubble\",\n          children: msg.formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-row ${isSent ? \"sent\" : \"received\"}`,\n          children: [!isSent && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: msg.avatarEmoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-bubble ${msg.readreceipts && !isSent ? \"read-green\" : \"\"}`,\n            children: [msg.decryptedText || msg.chathistory, isSent && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `read-receipt ${msg.readreceipts ? \"read\" : msg.delivered ? \"delivered\" : \"\"}`,\n              children: msg.delivered ? \"✓✓\" : \"✓\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: msg.localTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, msg.chatid + (msg.message_timestamp || new Date().toISOString()), true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(\"/chatlist\"),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-avatar\",\n        children: avatarEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-name\",\n          children: otherParticipant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-subtitle\",\n          style: {\n            fontSize: \"0.8rem\",\n            color: \"grey\"\n          },\n          children: [\"\\u2022 Donation #\", donationId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-wrapper\",\n      ref: messagesWrapperRef,\n      style: {\n        overflowY: \"auto\",\n        flex: 1,\n        padding: \"1rem\"\n      },\n      children: [renderMessages(), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-row received\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble typing\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), showScrollButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-to-bottom-btn\",\n      onClick: handleScrollToBottom,\n      children: [\"\\u2193 \", unreadMessagesCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unread-count-badge\",\n        children: unreadMessagesCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Type a message...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && !e.shiftKey && handleSend(),\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatThread, \"O1Y11zJmIRnvST2XBkk00AhCtrA=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = ChatThread;\nvar _c;\n$RefreshReg$(_c, \"ChatThread\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","useParams","useNavigate","useLocation","ChatContext","jsxDEV","_jsxDEV","ChatThread","_s","_location$state","_location$state2","donationId","navigate","location","channels","markChatRead","markDelivered","currentUserId","addMessage","messages","setMessages","typing","setTyping","inputValue","setInputValue","avatarEmoji","setAvatarEmoji","state","otherParticipant","setOtherParticipant","participantName","showScrollButton","setShowScrollButton","unreadMessagesCount","setUnreadMessagesCount","messagesEndRef","messagesWrapperRef","currentYear","Date","getFullYear","parseMessageTimestamp","ts","date","includes","replace","isNaN","getTime","Error","applyOffset","hours","donationMessages","filter","m","donationid","chathistory","trim","decryptedText","map","msgDateUTC","message_timestamp","msgDate","showYear","dateFormatter","Intl","DateTimeFormat","day","month","year","undefined","displayTimestamp","localTime","toLocaleTimeString","hour","minute","localDate","toLocaleDateString","formattedDate","format","otherMsg","find","senderid","senderName","charityName","icon","length","hasUndelivered","some","delivered","unread","readreceipts","setTimeout","_messagesEndRef$curre","current","scrollIntoView","behavior","wrapper","handleScroll","atBottom","scrollHeight","scrollTop","clientHeight","addEventListener","removeEventListener","handleScrollToBottom","_messagesEndRef$curre2","handleSend","timestampUTC","toISOString","_messagesEndRef$curre3","renderMessages","lastDate","msg","showDate","isSent","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","chatid","onClick","style","fontSize","color","ref","overflowY","flex","padding","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","rows","_c","$RefreshReg$"],"sources":["C:/Users/isack/OneDrive/Desktop/3rd Year Docs/Semester 2/EPE 321 - Software Engineering/verlastverison/foodsave-hub/client/src/communication/Components/ChatThread.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\"; \r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport ChatContext from \"./ChatContext\";\r\nimport \"./ChatThread.css\";\r\n\r\n/* Author: Lethabo Mazui\r\n   Event: Sprint 1\r\n   LatestUpdate: Auto scroll + manual scroll button with unread messages count\r\n   Description: Handles display and interaction for a single chat conversation\r\n*/\r\nexport default function ChatThread() {\r\n  const { donationId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { channels, markChatRead, markDelivered, currentUserId, addMessage } = useContext(ChatContext);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [typing, setTyping] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [avatarEmoji, setAvatarEmoji] = useState(location.state?.avatarEmoji || \"🍏\");\r\n  const [otherParticipant, setOtherParticipant] = useState(location.state?.participantName || \"User\");\r\n  const [showScrollButton, setShowScrollButton] = useState(false);\r\n  const [unreadMessagesCount, setUnreadMessagesCount] = useState(0);\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const messagesWrapperRef = useRef(null);\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const parseMessageTimestamp = (ts) => {\r\n    if (!ts) return new Date();\r\n    let date;\r\n    try {\r\n      date = new Date(ts.includes(\"T\") ? ts : ts.replace(\" \", \"T\") + \"Z\");\r\n      if (isNaN(date.getTime())) throw new Error(\"Invalid date\");\r\n    } catch {\r\n      date = new Date();\r\n    }\r\n    return date;\r\n  };\r\n\r\n  const applyOffset = (date, hours = 2) => new Date(date.getTime() + hours * 60 * 60 * 1000);\r\n\r\n  // Load messages and mark read/delivered\r\n  useEffect(() => {\r\n    if (!donationId || !channels) return;\r\n\r\n    const donationMessages = channels\r\n      .filter(m => m.donationid === donationId)\r\n      .filter(m => (m.chathistory && m.chathistory.trim()) || (m.decryptedText && m.decryptedText.trim()))\r\n      .map(m => {\r\n        const msgDateUTC = parseMessageTimestamp(m.message_timestamp);\r\n        const msgDate = applyOffset(msgDateUTC, 2); \r\n        const showYear = msgDate.getFullYear() !== currentYear;\r\n        const dateFormatter = new Intl.DateTimeFormat(\"en-ZA\", {\r\n          day: \"numeric\",\r\n          month: \"long\",\r\n          year: showYear ? \"numeric\" : undefined,\r\n        });\r\n\r\n        return {\r\n          ...m,\r\n          displayTimestamp: msgDate.getTime(),\r\n          localTime: msgDate.toLocaleTimeString(\"en-ZA\", { hour: \"2-digit\", minute: \"2-digit\" }),\r\n          localDate: msgDate.toLocaleDateString(\"en-ZA\", { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" }),\r\n          formattedDate: dateFormatter.format(msgDate),\r\n          decryptedText: null\r\n        };\r\n      });\r\n\r\n    setMessages(donationMessages);\r\n\r\n    const otherMsg = donationMessages.find(m => m.senderid !== currentUserId);\r\n    if (otherMsg) {\r\n      setOtherParticipant(otherMsg.senderName || otherMsg.charityName || \"User\");\r\n      setAvatarEmoji(otherMsg.icon || \"🍏\");\r\n    }\r\n\r\n    if (donationMessages.length > 0) {\r\n      markChatRead(donationId);\r\n      const hasUndelivered = donationMessages.some(m => !m.delivered && m.senderid !== currentUserId);\r\n      if (hasUndelivered) markDelivered(donationId);\r\n    }\r\n\r\n    // Count unread messages for scroll button\r\n    const unread = donationMessages.filter(m => !m.readreceipts && m.senderid !== currentUserId).length;\r\n    setUnreadMessagesCount(unread);\r\n    setShowScrollButton(unread > 0);\r\n\r\n    // Automatically scroll to bottom on chat open\r\n    setTimeout(() => messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" }), 50);\r\n\r\n  }, [donationId, channels, markChatRead, markDelivered, currentUserId]);\r\n\r\n  // Scroll to bottom when sending a message\r\n  useEffect(() => {\r\n    const wrapper = messagesWrapperRef.current;\r\n    if (!wrapper) return;\r\n    const handleScroll = () => {\r\n      const atBottom = wrapper.scrollHeight - wrapper.scrollTop === wrapper.clientHeight;\r\n      if (atBottom) setShowScrollButton(false);\r\n    };\r\n    wrapper.addEventListener(\"scroll\", handleScroll);\r\n    return () => wrapper.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const handleScrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    setShowScrollButton(false);\r\n    setUnreadMessagesCount(0);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!inputValue.trim()) return;\r\n    const timestampUTC = new Date().toISOString();\r\n    addMessage(currentUserId, inputValue.trim(), donationId, timestampUTC);\r\n    setInputValue(\"\");\r\n    // Scroll immediately when sending\r\n    setTimeout(() => messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" }), 50);\r\n  };\r\n\r\n  const renderMessages = () => {\r\n    let lastDate = \"\";\r\n    return messages.map(msg => {\r\n      const showDate = lastDate !== msg.localDate;\r\n      lastDate = msg.localDate;\r\n      const isSent = msg.senderid === currentUserId;\r\n\r\n      if (!(msg.decryptedText && msg.decryptedText.trim()) && !(msg.chathistory && msg.chathistory.trim())) return null;\r\n\r\n      return (\r\n        <React.Fragment key={msg.chatid + (msg.message_timestamp || new Date().toISOString())}>\r\n          {showDate && <div className=\"date-bubble\">{msg.formattedDate}</div>}\r\n          <div className={`message-row ${isSent ? \"sent\" : \"received\"}`}>\r\n            {!isSent && <div className=\"avatar\">{msg.avatarEmoji}</div>}\r\n            <div className={`message-bubble ${msg.readreceipts && !isSent ? \"read-green\" : \"\"}`}>\r\n              {msg.decryptedText || msg.chathistory}\r\n              {isSent && (\r\n                <span className={`read-receipt ${msg.readreceipts ? \"read\" : msg.delivered ? \"delivered\" : \"\"}`}>\r\n                  {msg.delivered ? \"✓✓\" : \"✓\"}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"message-time\">{msg.localTime}</div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <div className=\"chat-header\">\r\n        <button className=\"back-button\" onClick={() => navigate(\"/chatlist\")}>← Back</button>\r\n        <div className=\"chat-header-avatar\">{avatarEmoji}</div>\r\n        <div className=\"user-info\">\r\n          <div className=\"user-name\">{otherParticipant}</div>\r\n          <div className=\"user-subtitle\" style={{ fontSize: \"0.8rem\", color: \"grey\" }}>\r\n            • Donation #{donationId}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"messages-wrapper\" ref={messagesWrapperRef} style={{ overflowY: \"auto\", flex: 1, padding: \"1rem\" }}>\r\n        {renderMessages()}\r\n        {typing && (\r\n          <div className=\"message-row received\">\r\n            <div className=\"message-bubble typing\"><span></span><span></span><span></span></div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {showScrollButton && (\r\n        <button className=\"scroll-to-bottom-btn\" onClick={handleScrollToBottom}>\r\n          ↓ {unreadMessagesCount > 0 && <span className=\"unread-count-badge\">{unreadMessagesCount}</span>}\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"message-input-container\">\r\n        <textarea\r\n          placeholder=\"Type a message...\"\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n          onKeyDown={e => e.key === \"Enter\" && !e.shiftKey && handleSend()}\r\n          rows={1}\r\n        />\r\n        <button className=\"send-button\" onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACtE,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,kBAAkB;;AAEzB;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACnC,MAAM;IAAEC;EAAW,CAAC,GAAGV,SAAS,CAAC,CAAC;EAClC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW,QAAQ;IAAEC,YAAY;IAAEC,aAAa;IAAEC,aAAa;IAAEC;EAAW,CAAC,GAAGnB,UAAU,CAACK,WAAW,CAAC;EAEpG,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAAW,eAAA,GAAAI,QAAQ,CAACc,KAAK,cAAAlB,eAAA,uBAAdA,eAAA,CAAgBgB,WAAW,KAAI,IAAI,CAAC;EACnF,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,EAAAY,gBAAA,GAAAG,QAAQ,CAACc,KAAK,cAAAjB,gBAAA,uBAAdA,gBAAA,CAAgBoB,eAAe,KAAI,MAAM,CAAC;EACnG,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACmC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EAEjE,MAAMqC,cAAc,GAAGnC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMoC,kBAAkB,GAAGpC,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMqC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAE5C,MAAMC,qBAAqB,GAAIC,EAAE,IAAK;IACpC,IAAI,CAACA,EAAE,EAAE,OAAO,IAAIH,IAAI,CAAC,CAAC;IAC1B,IAAII,IAAI;IACR,IAAI;MACFA,IAAI,GAAG,IAAIJ,IAAI,CAACG,EAAE,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAGF,EAAE,GAAGA,EAAE,CAACG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;MACnE,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IAC5D,CAAC,CAAC,MAAM;MACNL,IAAI,GAAG,IAAIJ,IAAI,CAAC,CAAC;IACnB;IACA,OAAOI,IAAI;EACb,CAAC;EAED,MAAMM,WAAW,GAAGA,CAACN,IAAI,EAAEO,KAAK,GAAG,CAAC,KAAK,IAAIX,IAAI,CAACI,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGG,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;;EAE1F;EACApD,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,UAAU,IAAI,CAACG,QAAQ,EAAE;IAE9B,MAAMoC,gBAAgB,GAAGpC,QAAQ,CAC9BqC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,KAAK1C,UAAU,CAAC,CACxCwC,MAAM,CAACC,CAAC,IAAKA,CAAC,CAACE,WAAW,IAAIF,CAAC,CAACE,WAAW,CAACC,IAAI,CAAC,CAAC,IAAMH,CAAC,CAACI,aAAa,IAAIJ,CAAC,CAACI,aAAa,CAACD,IAAI,CAAC,CAAE,CAAC,CACnGE,GAAG,CAACL,CAAC,IAAI;MACR,MAAMM,UAAU,GAAGlB,qBAAqB,CAACY,CAAC,CAACO,iBAAiB,CAAC;MAC7D,MAAMC,OAAO,GAAGZ,WAAW,CAACU,UAAU,EAAE,CAAC,CAAC;MAC1C,MAAMG,QAAQ,GAAGD,OAAO,CAACrB,WAAW,CAAC,CAAC,KAAKF,WAAW;MACtD,MAAMyB,aAAa,GAAG,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACrDC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAEN,QAAQ,GAAG,SAAS,GAAGO;MAC/B,CAAC,CAAC;MAEF,OAAO;QACL,GAAGhB,CAAC;QACJiB,gBAAgB,EAAET,OAAO,CAACd,OAAO,CAAC,CAAC;QACnCwB,SAAS,EAAEV,OAAO,CAACW,kBAAkB,CAAC,OAAO,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;QACtFC,SAAS,EAAEd,OAAO,CAACe,kBAAkB,CAAC,OAAO,EAAE;UAAER,IAAI,EAAE,SAAS;UAAED,KAAK,EAAE,SAAS;UAAED,GAAG,EAAE;QAAU,CAAC,CAAC;QACrGW,aAAa,EAAEd,aAAa,CAACe,MAAM,CAACjB,OAAO,CAAC;QAC5CJ,aAAa,EAAE;MACjB,CAAC;IACH,CAAC,CAAC;IAEJpC,WAAW,CAAC8B,gBAAgB,CAAC;IAE7B,MAAM4B,QAAQ,GAAG5B,gBAAgB,CAAC6B,IAAI,CAAC3B,CAAC,IAAIA,CAAC,CAAC4B,QAAQ,KAAK/D,aAAa,CAAC;IACzE,IAAI6D,QAAQ,EAAE;MACZjD,mBAAmB,CAACiD,QAAQ,CAACG,UAAU,IAAIH,QAAQ,CAACI,WAAW,IAAI,MAAM,CAAC;MAC1ExD,cAAc,CAACoD,QAAQ,CAACK,IAAI,IAAI,IAAI,CAAC;IACvC;IAEA,IAAIjC,gBAAgB,CAACkC,MAAM,GAAG,CAAC,EAAE;MAC/BrE,YAAY,CAACJ,UAAU,CAAC;MACxB,MAAM0E,cAAc,GAAGnC,gBAAgB,CAACoC,IAAI,CAAClC,CAAC,IAAI,CAACA,CAAC,CAACmC,SAAS,IAAInC,CAAC,CAAC4B,QAAQ,KAAK/D,aAAa,CAAC;MAC/F,IAAIoE,cAAc,EAAErE,aAAa,CAACL,UAAU,CAAC;IAC/C;;IAEA;IACA,MAAM6E,MAAM,GAAGtC,gBAAgB,CAACC,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACqC,YAAY,IAAIrC,CAAC,CAAC4B,QAAQ,KAAK/D,aAAa,CAAC,CAACmE,MAAM;IACnGlD,sBAAsB,CAACsD,MAAM,CAAC;IAC9BxD,mBAAmB,CAACwD,MAAM,GAAG,CAAC,CAAC;;IAE/B;IACAE,UAAU,CAAC;MAAA,IAAAC,qBAAA;MAAA,QAAAA,qBAAA,GAAMxD,cAAc,CAACyD,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAAA,GAAE,EAAE,CAAC;EAEtF,CAAC,EAAE,CAACnF,UAAU,EAAEG,QAAQ,EAAEC,YAAY,EAAEC,aAAa,EAAEC,aAAa,CAAC,CAAC;;EAEtE;EACApB,SAAS,CAAC,MAAM;IACd,MAAMkG,OAAO,GAAG3D,kBAAkB,CAACwD,OAAO;IAC1C,IAAI,CAACG,OAAO,EAAE;IACd,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,QAAQ,GAAGF,OAAO,CAACG,YAAY,GAAGH,OAAO,CAACI,SAAS,KAAKJ,OAAO,CAACK,YAAY;MAClF,IAAIH,QAAQ,EAAEjE,mBAAmB,CAAC,KAAK,CAAC;IAC1C,CAAC;IACD+D,OAAO,CAACM,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAChD,OAAO,MAAMD,OAAO,CAACO,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,oBAAoB,GAAGA,CAAA,KAAM;IAAA,IAAAC,sBAAA;IACjC,CAAAA,sBAAA,GAAArE,cAAc,CAACyD,OAAO,cAAAY,sBAAA,uBAAtBA,sBAAA,CAAwBX,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;IAC9D9D,mBAAmB,CAAC,KAAK,CAAC;IAC1BE,sBAAsB,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMuE,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAClF,UAAU,CAACgC,IAAI,CAAC,CAAC,EAAE;IACxB,MAAMmD,YAAY,GAAG,IAAIpE,IAAI,CAAC,CAAC,CAACqE,WAAW,CAAC,CAAC;IAC7CzF,UAAU,CAACD,aAAa,EAAEM,UAAU,CAACgC,IAAI,CAAC,CAAC,EAAE5C,UAAU,EAAE+F,YAAY,CAAC;IACtElF,aAAa,CAAC,EAAE,CAAC;IACjB;IACAkE,UAAU,CAAC;MAAA,IAAAkB,sBAAA;MAAA,QAAAA,sBAAA,GAAMzE,cAAc,CAACyD,OAAO,cAAAgB,sBAAA,uBAAtBA,sBAAA,CAAwBf,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAAA,GAAE,EAAE,CAAC;EACtF,CAAC;EAED,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,QAAQ,GAAG,EAAE;IACjB,OAAO3F,QAAQ,CAACsC,GAAG,CAACsD,GAAG,IAAI;MACzB,MAAMC,QAAQ,GAAGF,QAAQ,KAAKC,GAAG,CAACrC,SAAS;MAC3CoC,QAAQ,GAAGC,GAAG,CAACrC,SAAS;MACxB,MAAMuC,MAAM,GAAGF,GAAG,CAAC/B,QAAQ,KAAK/D,aAAa;MAE7C,IAAI,EAAE8F,GAAG,CAACvD,aAAa,IAAIuD,GAAG,CAACvD,aAAa,CAACD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAEwD,GAAG,CAACzD,WAAW,IAAIyD,GAAG,CAACzD,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI;MAEjH,oBACEjD,OAAA,CAACV,KAAK,CAACsH,QAAQ;QAAAC,QAAA,GACZH,QAAQ,iBAAI1G,OAAA;UAAK8G,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAEJ,GAAG,CAACnC;QAAa;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnElH,OAAA;UAAK8G,SAAS,EAAE,eAAeH,MAAM,GAAG,MAAM,GAAG,UAAU,EAAG;UAAAE,QAAA,GAC3D,CAACF,MAAM,iBAAI3G,OAAA;YAAK8G,SAAS,EAAC,QAAQ;YAAAD,QAAA,EAAEJ,GAAG,CAACtF;UAAW;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3DlH,OAAA;YAAK8G,SAAS,EAAE,kBAAkBL,GAAG,CAACtB,YAAY,IAAI,CAACwB,MAAM,GAAG,YAAY,GAAG,EAAE,EAAG;YAAAE,QAAA,GACjFJ,GAAG,CAACvD,aAAa,IAAIuD,GAAG,CAACzD,WAAW,EACpC2D,MAAM,iBACL3G,OAAA;cAAM8G,SAAS,EAAE,gBAAgBL,GAAG,CAACtB,YAAY,GAAG,MAAM,GAAGsB,GAAG,CAACxB,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;cAAA4B,QAAA,EAC7FJ,GAAG,CAACxB,SAAS,GAAG,IAAI,GAAG;YAAG;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNlH,OAAA;YAAK8G,SAAS,EAAC,cAAc;YAAAD,QAAA,EAAEJ,GAAG,CAACzC;UAAS;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA,GAbaT,GAAG,CAACU,MAAM,IAAIV,GAAG,CAACpD,iBAAiB,IAAI,IAAIrB,IAAI,CAAC,CAAC,CAACqE,WAAW,CAAC,CAAC,CAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcrE,CAAC;IAErB,CAAC,CAAC;EACJ,CAAC;EAED,oBACElH,OAAA;IAAK8G,SAAS,EAAC,WAAW;IAAAD,QAAA,gBACxB7G,OAAA;MAAK8G,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1B7G,OAAA;QAAQ8G,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEA,CAAA,KAAM9G,QAAQ,CAAC,WAAW,CAAE;QAAAuG,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFlH,OAAA;QAAK8G,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAAE1F;MAAW;QAAA4F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDlH,OAAA;QAAK8G,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxB7G,OAAA;UAAK8G,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAEvF;QAAgB;UAAAyF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnDlH,OAAA;UAAK8G,SAAS,EAAC,eAAe;UAACO,KAAK,EAAE;YAAEC,QAAQ,EAAE,QAAQ;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAV,QAAA,GAAC,mBAC/D,EAACxG,UAAU;QAAA;UAAA0G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlH,OAAA;MAAK8G,SAAS,EAAC,kBAAkB;MAACU,GAAG,EAAE1F,kBAAmB;MAACuF,KAAK,EAAE;QAAEI,SAAS,EAAE,MAAM;QAAEC,IAAI,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAd,QAAA,GAC/GN,cAAc,CAAC,CAAC,EAChBxF,MAAM,iBACLf,OAAA;QAAK8G,SAAS,EAAC,sBAAsB;QAAAD,QAAA,eACnC7G,OAAA;UAAK8G,SAAS,EAAC,uBAAuB;UAAAD,QAAA,gBAAC7G,OAAA;YAAA+G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAAAlH,OAAA;YAAA+G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAAAlH,OAAA;YAAA+G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CACN,eACDlH,OAAA;QAAKwH,GAAG,EAAE3F;MAAe;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAELzF,gBAAgB,iBACfzB,OAAA;MAAQ8G,SAAS,EAAC,sBAAsB;MAACM,OAAO,EAAEnB,oBAAqB;MAAAY,QAAA,GAAC,SACpE,EAAClF,mBAAmB,GAAG,CAAC,iBAAI3B,OAAA;QAAM8G,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAAElF;MAAmB;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CACT,eAEDlH,OAAA;MAAK8G,SAAS,EAAC,yBAAyB;MAAAD,QAAA,gBACtC7G,OAAA;QACE4H,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAE5G,UAAW;QAClB6G,QAAQ,EAAEC,CAAC,IAAI7G,aAAa,CAAC6G,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,SAAS,EAAEF,CAAC,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAACH,CAAC,CAACI,QAAQ,IAAIhC,UAAU,CAAC,CAAE;QACjEiC,IAAI,EAAE;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFlH,OAAA;QAAQ8G,SAAS,EAAC,aAAa;QAACM,OAAO,EAAEjB,UAAW;QAAAU,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChH,EAAA,CApLuBD,UAAU;EAAA,QACTN,SAAS,EACfC,WAAW,EACXC,WAAW;AAAA;AAAAwI,EAAA,GAHNpI,UAAU;AAAA,IAAAoI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}