{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isack\\\\OneDrive\\\\Desktop\\\\3rd Year Docs\\\\Semester 2\\\\EPE 321 - Software Engineering\\\\verlastverison\\\\foodsave-hub\\\\client\\\\src\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// UserContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\n\n// Provider component\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(() => {\n    const stored = localStorage.getItem(\"loggedInUser\");\n    return stored ? JSON.parse(stored) : null;\n  });\n\n  // Persist changes in localStorage\n  useEffect(() => {\n    if (currentUser) localStorage.setItem(\"loggedInUser\", JSON.stringify(currentUser));else localStorage.removeItem(\"loggedInUser\");\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for consuming context\n_s(UserProvider, \"yc3P885PgD3zXWqkFUpHqqH8H8A=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","currentUser","setCurrentUser","stored","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["C:/Users/isack/OneDrive/Desktop/3rd Year Docs/Semester 2/EPE 321 - Software Engineering/verlastverison/foodsave-hub/client/src/UserContext.js"],"sourcesContent":["// UserContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// Create context\r\nconst UserContext = createContext(null);\r\n\r\n// Provider component\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(() => {\r\n    const stored = localStorage.getItem(\"loggedInUser\");\r\n    return stored ? JSON.parse(stored) : null;\r\n  });\r\n\r\n  // Persist changes in localStorage\r\n  useEffect(() => {\r\n    if (currentUser) localStorage.setItem(\"loggedInUser\", JSON.stringify(currentUser));\r\n    else localStorage.removeItem(\"loggedInUser\");\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ currentUser, setCurrentUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for consuming context\r\nexport const useUser = () => useContext(UserContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACnD,MAAMU,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACnD,OAAOF,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,IAAI;EAC3C,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACd,IAAIO,WAAW,EAAEG,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACR,WAAW,CAAC,CAAC,CAAC,KAC9EG,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;EAC9C,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EAC1DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAhB,EAAA,CAnBaF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAoBzB,OAAO,MAAMoB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3B,UAAU,CAACK,WAAW,CAAC;AAAA;AAACsB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}