{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\School\\\\Year 3\\\\Semester 2\\\\EPE_2025\\\\NewWebsite\\\\foodsave-hub\\\\client\\\\src\\\\donation_coordination\\\\grocerylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport supabase from \"../supabaseClient\";\nimport \"./charity.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroceryList = () => {\n  _s();\n  var _location$state, _location$state2;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const foodbank = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.foodbank) || {\n    name: \"[UserName]\"\n  };\n  const userId = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.userId) || null;\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [foodItems, setFoodItems] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n  const [notification, setNotification] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(\"success\");\n  const [charityCapacity, setCharityCapacity] = useState(0);\n\n  // Fetch charity capacity\n  useEffect(() => {\n    const fetchCapacity = async () => {\n      if (!foodbank.stakeholderid) return;\n      const {\n        data,\n        error\n      } = await supabase.from(\"stakeholderdb\").select(\"capacity\").eq(\"stakeholderid\", foodbank.stakeholderid).single();\n      if (error) {\n        console.error(\"Error fetching charity capacity:\", error);\n        return;\n      }\n      setCharityCapacity((data === null || data === void 0 ? void 0 : data.capacity) || 0);\n    };\n    fetchCapacity();\n  }, [foodbank.stakeholderid]);\n\n  // Fetch food items\n  useEffect(() => {\n    if (!userId) {\n      setFetchError(\"No stakeholder ID provided.\");\n      return;\n    }\n    const fetchItems = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from(\"fooditemdb\").select(\"fooditemid, name, Measure_per_Unit, Unit, quantity, expirydate\").eq(\"stakeholderid\", userId);\n      if (error) {\n        console.error(error);\n        setFetchError(\"Could not fetch food items.\");\n        setFoodItems([]);\n        return;\n      }\n      const now = new Date();\n      const cutoff = new Date(now.getTime() + 48 * 60 * 60 * 1000);\n      const filteredItems = (data || []).filter(item => {\n        if (!item.expirydate) return true;\n        const expiry = new Date(item.expirydate);\n        return expiry > cutoff;\n      });\n      setFoodItems(filteredItems);\n      setFetchError(null);\n    };\n    fetchItems();\n  }, [userId]);\n  const handleSelect = item => {\n    setSelectedItems(prev => prev.includes(item) ? prev.filter(i => i !== item) : [...prev, item]);\n  };\n\n  // Generate donation ID\n  const generateDonationId = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"donationdb\").select(\"donationid\").order(\"donationid\", {\n        ascending: false\n      }).limit(1);\n      if (error) throw error;\n      if (!data || data.length === 0) return \"d001\";\n      const lastId = data[0].donationid;\n      const lastNum = parseInt(lastId.replace(\"d\", \"\"), 10);\n      return `d${String(lastNum + 1).padStart(3, \"0\")}`;\n    } catch (err) {\n      console.error(\"Error generating donation ID:\", err);\n      return `d${String(Math.floor(1 + Math.random() * 999)).padStart(3, \"0\")}`;\n    }\n  };\n\n  // Send donation with capacity check\n  const handleSendDonation = async () => {\n    if (selectedItems.length === 0) {\n      setNotificationType(\"warning\");\n      setNotification(\"Please select at least one item to donate.\");\n      return;\n    }\n    try {\n      let totalQuantity = 0;\n\n      // Calculate total quantity of selected items\n      const itemsToSave = selectedItems.map(label => {\n        const [name] = label.split(\" (\");\n        const item = foodItems.find(f => f.name === name.trim());\n        const quantity = (item === null || item === void 0 ? void 0 : item.quantity) || 0;\n        totalQuantity += quantity;\n        return {\n          name: name.trim(),\n          quantity\n        };\n      });\n\n      // Check against charity capacity\n      if (totalQuantity > charityCapacity) {\n        setNotificationType(\"warning\");\n        setNotification(`Selected items (${totalQuantity}) exceed the capacity (${charityCapacity}) of ${foodbank.name}.`);\n        return;\n      }\n\n      // Generate donation ID\n      const newDonationId = await generateDonationId();\n\n      // Insert donation\n      const {\n        data,\n        error\n      } = await supabase.from(\"donationdb\").insert([{\n        donationid: newDonationId,\n        donationstatus: \"pending\",\n        charityid: foodbank.stakeholderid,\n        stakeholderid: userId,\n        donation_items: itemsToSave\n      }]).select();\n      if (error) {\n        console.error(\"Error inserting donation:\", error);\n        setNotificationType(\"warning\");\n        setNotification(\"Could not send donation. Please try again.\");\n        return;\n      }\n      setNotificationType(\"success\");\n      setNotification(`Donation sent to ${foodbank.name}`);\n      setSelectedItems([]);\n    } catch (err) {\n      console.error(\"Unexpected error:\", err);\n      setNotificationType(\"warning\");\n      setNotification(\"Something went wrong.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grocery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(\"/donor\"),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Donate to \", foodbank.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Select items to donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-list green-bg\",\n      children: foodItems.map(item => {\n        const itemLabel = `${item.name} (${item.Measure_per_Unit} ${item.Unit}, quantity: ${item.quantity})`;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"food-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedItems.includes(itemLabel),\n            onChange: () => handleSelect(itemLabel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), itemLabel, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.8em\",\n              color: \"#666\"\n            },\n            children: [\"(expires\", \" \", item.expirydate ? new Date(item.expirydate).toLocaleDateString() : \"N/A\", \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, item.fooditemid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `inline-notification ${notificationType}`,\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-send\",\n      onClick: handleSendDonation,\n      children: \"Send Donation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(GroceryList, \"MWKt1opkQQW3IPamScEAxmA/NT4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = GroceryList;\nexport default GroceryList;\nvar _c;\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","supabase","jsxDEV","_jsxDEV","GroceryList","_s","_location$state","_location$state2","navigate","location","foodbank","state","name","userId","selectedItems","setSelectedItems","foodItems","setFoodItems","fetchError","setFetchError","notification","setNotification","notificationType","setNotificationType","charityCapacity","setCharityCapacity","fetchCapacity","stakeholderid","data","error","from","select","eq","single","console","capacity","fetchItems","now","Date","cutoff","getTime","filteredItems","filter","item","expirydate","expiry","handleSelect","prev","includes","i","generateDonationId","order","ascending","limit","length","lastId","donationid","lastNum","parseInt","replace","String","padStart","err","Math","floor","random","handleSendDonation","totalQuantity","itemsToSave","map","label","split","find","f","trim","quantity","newDonationId","insert","donationstatus","charityid","donation_items","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","itemLabel","Measure_per_Unit","Unit","type","checked","onChange","style","fontSize","color","toLocaleDateString","fooditemid","_c","$RefreshReg$"],"sources":["C:/Users/chant/Desktop/School/Year 3/Semester 2/EPE_2025/NewWebsite/foodsave-hub/client/src/donation_coordination/grocerylist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport supabase from \"../supabaseClient\";\r\nimport \"./charity.css\";\r\n\r\nconst GroceryList = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const foodbank = location.state?.foodbank || { name: \"[UserName]\" };\r\n  const userId = location.state?.userId || null;\r\n\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [foodItems, setFoodItems] = useState([]);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [notificationType, setNotificationType] = useState(\"success\");\r\n  const [charityCapacity, setCharityCapacity] = useState(0);\r\n\r\n  // Fetch charity capacity\r\n  useEffect(() => {\r\n    const fetchCapacity = async () => {\r\n      if (!foodbank.stakeholderid) return;\r\n\r\n      const { data, error } = await supabase\r\n        .from(\"stakeholderdb\")\r\n        .select(\"capacity\")\r\n        .eq(\"stakeholderid\", foodbank.stakeholderid)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error(\"Error fetching charity capacity:\", error);\r\n        return;\r\n      }\r\n\r\n      setCharityCapacity(data?.capacity || 0);\r\n    };\r\n\r\n    fetchCapacity();\r\n  }, [foodbank.stakeholderid]);\r\n\r\n  // Fetch food items\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      setFetchError(\"No stakeholder ID provided.\");\r\n      return;\r\n    }\r\n\r\n    const fetchItems = async () => {\r\n      const { data, error } = await supabase\r\n        .from(\"fooditemdb\")\r\n        .select(\"fooditemid, name, Measure_per_Unit, Unit, quantity, expirydate\")\r\n        .eq(\"stakeholderid\", userId);\r\n\r\n      if (error) {\r\n        console.error(error);\r\n        setFetchError(\"Could not fetch food items.\");\r\n        setFoodItems([]);\r\n        return;\r\n      }\r\n\r\n      const now = new Date();\r\n      const cutoff = new Date(now.getTime() + 48 * 60 * 60 * 1000);\r\n\r\n      const filteredItems = (data || []).filter((item) => {\r\n        if (!item.expirydate) return true;\r\n        const expiry = new Date(item.expirydate);\r\n        return expiry > cutoff;\r\n      });\r\n\r\n      setFoodItems(filteredItems);\r\n      setFetchError(null);\r\n    };\r\n\r\n    fetchItems();\r\n  }, [userId]);\r\n\r\n  const handleSelect = (item) => {\r\n    setSelectedItems((prev) =>\r\n      prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]\r\n    );\r\n  };\r\n\r\n  // Generate donation ID\r\n  const generateDonationId = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"donationdb\")\r\n        .select(\"donationid\")\r\n        .order(\"donationid\", { ascending: false })\r\n        .limit(1);\r\n\r\n      if (error) throw error;\r\n\r\n      if (!data || data.length === 0) return \"d001\";\r\n\r\n      const lastId = data[0].donationid;\r\n      const lastNum = parseInt(lastId.replace(\"d\", \"\"), 10);\r\n      return `d${String(lastNum + 1).padStart(3, \"0\")}`;\r\n    } catch (err) {\r\n      console.error(\"Error generating donation ID:\", err);\r\n      return `d${String(Math.floor(1 + Math.random() * 999)).padStart(3, \"0\")}`;\r\n    }\r\n  };\r\n\r\n  // Send donation with capacity check\r\n  const handleSendDonation = async () => {\r\n    if (selectedItems.length === 0) {\r\n      setNotificationType(\"warning\");\r\n      setNotification(\"Please select at least one item to donate.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let totalQuantity = 0;\r\n\r\n      // Calculate total quantity of selected items\r\n      const itemsToSave = selectedItems.map((label) => {\r\n        const [name] = label.split(\" (\");\r\n        const item = foodItems.find((f) => f.name === name.trim());\r\n        const quantity = item?.quantity || 0;\r\n        totalQuantity += quantity;\r\n        return { name: name.trim(), quantity };\r\n      });\r\n\r\n      // Check against charity capacity\r\n      if (totalQuantity > charityCapacity) {\r\n        setNotificationType(\"warning\");\r\n        setNotification(\r\n          `Selected items (${totalQuantity}) exceed the capacity (${charityCapacity}) of ${foodbank.name}.`\r\n        );\r\n        return;\r\n      }\r\n\r\n      // Generate donation ID\r\n      const newDonationId = await generateDonationId();\r\n\r\n      // Insert donation\r\n      const { data, error } = await supabase\r\n        .from(\"donationdb\")\r\n        .insert([\r\n          {\r\n            donationid: newDonationId,\r\n            donationstatus: \"pending\",\r\n            charityid: foodbank.stakeholderid,\r\n            stakeholderid: userId,\r\n            donation_items: itemsToSave,\r\n          },\r\n        ])\r\n        .select();\r\n\r\n      if (error) {\r\n        console.error(\"Error inserting donation:\", error);\r\n        setNotificationType(\"warning\");\r\n        setNotification(\"Could not send donation. Please try again.\");\r\n        return;\r\n      }\r\n\r\n      setNotificationType(\"success\");\r\n      setNotification(`Donation sent to ${foodbank.name}`);\r\n      setSelectedItems([]);\r\n    } catch (err) {\r\n      console.error(\"Unexpected error:\", err);\r\n      setNotificationType(\"warning\");\r\n      setNotification(\"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grocery-container\">\r\n      <button className=\"back-btn\" onClick={() => navigate(\"/donor\")}>\r\n        ← Back\r\n      </button>\r\n\r\n      <h3>Donate to {foodbank.name}</h3>\r\n      <h3>\r\n        <em>Select items to donate</em>\r\n      </h3>\r\n\r\n      {fetchError && <p>{fetchError}</p>}\r\n\r\n      <div className=\"food-list green-bg\">\r\n        {foodItems.map((item) => {\r\n          const itemLabel = `${item.name} (${item.Measure_per_Unit} ${item.Unit}, quantity: ${item.quantity})`;\r\n          return (\r\n            <label key={item.fooditemid} className=\"food-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedItems.includes(itemLabel)}\r\n                onChange={() => handleSelect(itemLabel)}\r\n              />\r\n              {itemLabel}{\" \"}\r\n              <span style={{ fontSize: \"0.8em\", color: \"#666\" }}>\r\n                (expires{\" \"}\r\n                {item.expirydate\r\n                  ? new Date(item.expirydate).toLocaleDateString()\r\n                  : \"N/A\"}\r\n                )\r\n              </span>\r\n            </label>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {notification && (\r\n        <div className={`inline-notification ${notificationType}`}>\r\n          {notification}\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"btn-send\" onClick={handleSendDonation}>\r\n        Send Donation\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroceryList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}