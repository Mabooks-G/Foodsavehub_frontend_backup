{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isack\\\\OneDrive\\\\Desktop\\\\3rd Year Docs\\\\Semester 2\\\\EPE 321 - Software Engineering\\\\foodsave-hub\\\\client\\\\src\\\\donation_coordination\\\\donor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport supabase from \"../supabaseClient\";\nimport \"./charity.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Donor = ({\n  currentUser,\n  userType\n}) => {\n  _s();\n  const currentUserId = currentUser.stakeholderID;\n  const [charities, setCharities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [donationUpdates, setDonationUpdates] = useState([]);\n  const navigate = useNavigate();\n\n  // ✅ Fetch charities in same region\n  useEffect(() => {\n    const fetchCharities = async () => {\n      if (!currentUserId) {\n        console.warn(\"currentUserId is missing!\");\n        setLoading(false);\n        return;\n      }\n      try {\n        const {\n          data: userData,\n          error: userError\n        } = await supabase.from(\"stakeholderdb\").select(\"region\").eq(\"stakeholderid\", currentUserId).maybeSingle();\n        if (userError) throw userError;\n        if (!userData) {\n          console.warn(\"No user found with ID:\", currentUserId);\n          setLoading(false);\n          return;\n        }\n        const {\n          data: charityData,\n          error: charityError\n        } = await supabase.from(\"stakeholderdb\").select(\"*\").like(\"stakeholderid\", \"c%\").eq(\"region\", userData.region);\n        if (charityError) throw charityError;\n        setCharities(charityData || []);\n      } catch (err) {\n        console.error(\"Unexpected error fetching charities:\", err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCharities();\n  }, [currentUserId]);\n\n  // ✅ Subscribe to donation updates\n  useEffect(() => {\n    if (!currentUserId) return;\n    console.log(\"Subscribing for donor updates with ID:\", currentUserId);\n    const subscription = supabase.channel(\"donation-updates\").on(\"postgres_changes\", {\n      event: \"*\",\n      schema: \"public\",\n      table: \"donationdb\",\n      filter: `donorid=eq.${currentUserId}` // ✅ must match DB\n    }, async payload => {\n      console.log(\"Donation event received:\", payload);\n      const {\n        donationstatus,\n        donationid,\n        charityid,\n        donation_items\n      } = payload.new || {};\n      const {\n        data: charity\n      } = await supabase.from(\"stakeholderdb\").select(\"name\").eq(\"stakeholderid\", charityid).maybeSingle();\n      let message = \"\";\n      if (donationstatus === \"approved\") {\n        const items = (donation_items || []).map(i => i.name).join(\", \");\n        message = `${(charity === null || charity === void 0 ? void 0 : charity.name) || charityid} has accepted your donation${items ? ` (${items})` : \"\"}.`;\n      } else if (donationstatus === \"unapproved\") {\n        message = `${(charity === null || charity === void 0 ? void 0 : charity.name) || charityid} has declined your donation.`;\n      } else {\n        message = `${(charity === null || charity === void 0 ? void 0 : charity.name) || charityid} updated donation ${donationid} (${donationstatus}).`;\n      }\n      setDonationUpdates(prev => [...prev.filter(d => d.donationid !== donationid), {\n        donationid,\n        message\n      }]);\n    }).subscribe(status => {\n      console.log(\"Subscription status:\", status);\n    });\n    return () => {\n      supabase.removeChannel(subscription);\n    };\n  }, [currentUserId]);\n  const handleDonate = charity => {\n    navigate(\"/grocerylist\", {\n      state: {\n        foodbank: charity,\n        userId: currentUserId\n      }\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading charities...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"donations-title\",\n      children: \"Donations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Donate to a Food bank \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: currentUser.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donation-status\",\n      children: donationUpdates.map(update => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: update.message\n      }, update.donationid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search charities (sprint 2)...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"foodbanks-list\",\n      children: charities.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No charities found in your region.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : charities.map((charity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `offer-item ${index % 2 === 0 ? \"green-bg\" : \"white-bg\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offer-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: charity.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: charity.region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offer-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-donate\",\n            onClick: () => handleDonate(charity),\n            children: userType === \"Business\" ? \"Offer Donation\" : \"Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, charity.stakeholderid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Donor, \"pSKfLS4m9qxJcUnE6yKtlzKJVB8=\", false, function () {\n  return [useNavigate];\n});\n_c = Donor;\nexport default Donor;\nvar _c;\n$RefreshReg$(_c, \"Donor\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","supabase","jsxDEV","_jsxDEV","Donor","currentUser","userType","_s","currentUserId","stakeholderID","charities","setCharities","loading","setLoading","donationUpdates","setDonationUpdates","navigate","fetchCharities","console","warn","data","userData","error","userError","from","select","eq","maybeSingle","charityData","charityError","like","region","err","message","log","subscription","channel","on","event","schema","table","filter","payload","donationstatus","donationid","charityid","donation_items","new","charity","items","map","i","name","join","prev","d","subscribe","status","removeChannel","handleDonate","state","foodbank","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","update","type","placeholder","length","index","onClick","stakeholderid","_c","$RefreshReg$"],"sources":["C:/Users/isack/OneDrive/Desktop/3rd Year Docs/Semester 2/EPE 321 - Software Engineering/foodsave-hub/client/src/donation_coordination/donor.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport supabase from \"../supabaseClient\";\r\nimport \"./charity.css\";\r\n\r\nconst Donor = ({ currentUser, userType }) => {\r\n  const currentUserId = currentUser.stakeholderID;\r\n  const [charities, setCharities] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [donationUpdates, setDonationUpdates] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Fetch charities in same region\r\n  useEffect(() => {\r\n    const fetchCharities = async () => {\r\n      if (!currentUserId) {\r\n        console.warn(\"currentUserId is missing!\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { data: userData, error: userError } = await supabase\r\n          .from(\"stakeholderdb\")\r\n          .select(\"region\")\r\n          .eq(\"stakeholderid\", currentUserId)\r\n          .maybeSingle();\r\n\r\n        if (userError) throw userError;\r\n        if (!userData) {\r\n          console.warn(\"No user found with ID:\", currentUserId);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const { data: charityData, error: charityError } = await supabase\r\n          .from(\"stakeholderdb\")\r\n          .select(\"*\")\r\n          .like(\"stakeholderid\", \"c%\")\r\n          .eq(\"region\", userData.region);\r\n\r\n        if (charityError) throw charityError;\r\n        setCharities(charityData || []);\r\n      } catch (err) {\r\n        console.error(\"Unexpected error fetching charities:\", err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCharities();\r\n  }, [currentUserId]);\r\n\r\n  // ✅ Subscribe to donation updates\r\n  useEffect(() => {\r\n    if (!currentUserId) return;\r\n\r\n    console.log(\"Subscribing for donor updates with ID:\", currentUserId);\r\n\r\n    const subscription = supabase\r\n      .channel(\"donation-updates\")\r\n      .on(\r\n        \"postgres_changes\",\r\n        {\r\n          event: \"*\",\r\n          schema: \"public\",\r\n          table: \"donationdb\",\r\n          filter: `donorid=eq.${currentUserId}`, // ✅ must match DB\r\n        },\r\n        async (payload) => {\r\n          console.log(\"Donation event received:\", payload);\r\n\r\n          const { donationstatus, donationid, charityid, donation_items } =\r\n            payload.new || {};\r\n\r\n          const { data: charity } = await supabase\r\n            .from(\"stakeholderdb\")\r\n            .select(\"name\")\r\n            .eq(\"stakeholderid\", charityid)\r\n            .maybeSingle();\r\n\r\n          let message = \"\";\r\n          if (donationstatus === \"approved\") {\r\n            const items = (donation_items || [])\r\n              .map((i) => i.name)\r\n              .join(\", \");\r\n            message = `${charity?.name || charityid} has accepted your donation${\r\n              items ? ` (${items})` : \"\"\r\n            }.`;\r\n          } else if (donationstatus === \"unapproved\") {\r\n            message = `${charity?.name || charityid} has declined your donation.`;\r\n          } else {\r\n            message = `${charity?.name || charityid} updated donation ${donationid} (${donationstatus}).`;\r\n          }\r\n\r\n          setDonationUpdates((prev) => [\r\n            ...prev.filter((d) => d.donationid !== donationid),\r\n            { donationid, message },\r\n          ]);\r\n        }\r\n      )\r\n      .subscribe((status) => {\r\n        console.log(\"Subscription status:\", status);\r\n      });\r\n\r\n    return () => {\r\n      supabase.removeChannel(subscription);\r\n    };\r\n  }, [currentUserId]);\r\n\r\n  const handleDonate = (charity) => {\r\n    navigate(\"/grocerylist\", {\r\n      state: { foodbank: charity, userId: currentUserId },\r\n    });\r\n  };\r\n\r\n  if (loading) return <p>Loading charities...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2 id=\"donations-title\">Donations</h2>\r\n      <p>\r\n        Donate to a Food bank <strong>{currentUser.name}</strong>\r\n      </p>\r\n\r\n      {/* ✅ Donation status messages */}\r\n      <div className=\"donation-status\">\r\n        {donationUpdates.map((update) => (\r\n          <p key={update.donationid}>{update.message}</p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"search-bar\">\r\n        <input type=\"text\" placeholder=\"Search charities (sprint 2)...\" />\r\n      </div>\r\n\r\n      <div id=\"foodbanks-list\">\r\n        {charities.length === 0 ? (\r\n          <p>No charities found in your region.</p>\r\n        ) : (\r\n          charities.map((charity, index) => (\r\n            <div\r\n              key={charity.stakeholderid}\r\n              className={`offer-item ${\r\n                index % 2 === 0 ? \"green-bg\" : \"white-bg\"\r\n              }`}\r\n            >\r\n              <div className=\"offer-details\">\r\n                <h4>{charity.name}</h4>\r\n                <p>{charity.region}</p>\r\n              </div>\r\n              <div className=\"offer-actions\">\r\n                <button\r\n                  className=\"btn btn-donate\"\r\n                  onClick={() => handleDonate(charity)}\r\n                >\r\n                  {userType === \"Business\" ? \"Offer Donation\" : \"Donate\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Donor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}